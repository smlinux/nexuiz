// Property of Alientrap
//
// Templates

//////////////////////////////////////////////////////////////////////////////////
// Basic default templates (setting default properties)
//////////////////////////////////////////////////////////////////////////////////
Template Rect Rect
{
	size		[InfiniteVector]
	alpha		1.0
	drawFlag	[DrawFlagNormal]
	color		'1.0 1.0 1.0'
}
Template Label Label
{
	color		[DefaultTextColor]
	alpha		[DefaultTextAlpha]
	drawFlag	[DefaultTextDrawFlag]
	fontSize	[DefaultFontSize]
}
Template Picture Picture
{
	color		[DefaultPicColor]
	alpha		[DefaultPicAlpha]
	drawFlag	[DefaultPicDrawFlag]
}
Template Button TextButton
{
	fontSize	[DefaultFontSize]
	color		[DefaultTextColor]
	colorSelected	[DefaultSelTextColor]
	colorPressed	[DefaultPreTextColor]
	alphas_x	[DefaultTextAlpha]
	alphas_y 	[DefaultSelTextAlpha]
	alphas_z	[DefaultPreTextAlpha]
	drawFlags_x	[DefaultTextDrawFlag]
	drawFlags_y	[DefaultSelTextDrawFlag]
	drawFlags_z	[DefaultPreTextDrawFlag]
	soundSelected	[DefaultSelectSound]
	soundPressed	[DefaultPressSound]
}
Template Button PictureButton
{
	color		[DefaultPicColor]
	colorSelected	[DefaultSelPicColor]
	colorPressed	[DefaultPrePicColor]
	alphas_x	[DefaultPicAlpha]
	alphas_y 	[DefaultSelPicAlpha]
	alphas_z	[DefaultPrePicAlpha]
	drawFlags_x	[DefaultPicDrawFlag]
	drawFlags_y	[DefaultSelPicDrawFlag]
	drawFlags_z	[DefaultPrePicDrawFlag]
	soundSelected	[DefaultSelectSound]
	soundPressed	[DefaultPressSound]
}
Template Slider Slider
{
	color		[DefaultPicColor]
	//colorSelected	[DefaultSelPicColor]
	colorSelected	"0.9 0.9 1.0"
	alphas_x	[DefaultPicAlpha]
	alphas_y	[DefaultSelPicAlpha]
	drawFlags_x	[DefaultPicDrawFlag]
	drawFlags_y	[DefaultSelPicDrawFlag]
	soundSelected	[DefaultSelectSound]
	soundIncrease	[DefaultIncreaseSound]
	soundDecrease	[DefaultDecreaseSound]
	picture		[DefaultSliderBar]
	pictureSlider	[DefaultSlider]
	proportions	[DefaultProportions]
	direction	[DefaultDirection]
	size		[DefaultSliderBarSize]
	sizeSlider	[DefaultSliderSize]
}
Template EditBox EditBox
{
	fontSize	[DefaultFontSize]
	color		[DefaultTextColor]
	colorSelected	[DefaultTextColor]
	colorPressed	[DefaultPreTextColor]
	alphas_x	[DefaultTextAlpha]
	alphas_y 	[DefaultSelTextAlpha]
	alphas_z	[DefaultPreTextAlpha]
	drawFlags_x	[DefaultTextDrawFlag]
	drawFlags_y	[DefaultSelTextDrawFlag]
	drawFlags_z	[DefaultPreTextDrawFlag]
	colorCursor	[DefaultCursorColor]
	colorCursorFlash [DefaultCursorFlashColor]
	alphasCursor_x	[DefaultTextAlpha]
	alphasCursor_y 	[DefaultSelTextAlpha]
	drawFlagsCursor_x [DefaultTextDrawFlag]
	drawFlagsCursor_y [DefaultSelTextDrawFlag]
	sizeCursor	[DefaultCursorSize]
	sizeCursorFlash [DefaultCursorFlashSize]
	soundSelected	[DefaultSelectSound]
	soundMove	[DefaultIncreaseSound]
	soundKey	[DefaultDecreaseSound]
}
Template List List
{
	fontSize	[DefaultFontSize]
	color		[DefaultTextColor]
	colorSelected	[DefaultSelTextColor]
	colorPressed	[DefaultPreTextColor]
	colorInactive	[DefaultInaTextColor]
	alphas_x	[DefaultTextAlpha]
	alphas_y 	[DefaultSelTextAlpha]
	alphas_z	[DefaultPreTextAlpha]
	alphaInactive	[DefaultInaTextAlpha]
	drawFlags_x	[DefaultTextDrawFlag]
	drawFlags_y	[DefaultSelTextDrawFlag]
	drawFlags_z	[DefaultPreTextDrawFlag]
	drawFlagInactive [DefaultInaTextDrawFlag]
	soundSelected	[DefaultSelectSound]
	soundPressed	[DefaultPressSound]
}
DeriveTemplate TextButton ValueButton
{
	type 	"Item_ValueButton"
}
DeriveTemplate PictureButton PictureValueButton
{
	type	"Item_ValueButton"
}
DeriveTemplate Label MultiLabel
{
	type 	"Item_MultiLabel"
}
DeriveTemplate TextButton SwitchButton
{
	type	"Item_SwitchButton"
}
//////////////////////////////////////////////////////////////////////////////////
// Derived items
//////////////////////////////////////////////////////////////////////////////////
Template Arrangement Composition
{
	flag		[FlagEmbedded]
}
//////////////////////////////////////////////////////////////////////////////////
// Specialized items
//////////////////////////////////////////////////////////////////////////////////
Template DataLink_ValueSwitch DataLink_OnOffSwitch
{
	minValue	0.0
	maxValue	1.0
	descList	"'Off' 'On'"
	link		"##up"
}
Template DataLink_Value DataLink_ZeroOneValue
{
	minValue 	0.0
	maxValue	1.0
	stepValue	0.05
	link		"##up"
}
Template DataLink_Value DataLink_SettingValue
{
	minValue	0.0
	maxValue	9999.0
	stepValue	0.01
	link		"##up"
}
Template DataLink_Text DataLink_SettingText
{
	maxValue	9
	link		"##down"

	Template DataLink_TextValue DataLink_TextValue
	{
		link	"##up prev"
	}
}
//////////////////////////////////////////////////////////////////////////////////
// Nexuiz specialized items
//////////////////////////////////////////////////////////////////////////////////
#define Nex_DefaultHorzDirection	'20 0 0'
#define Nex_DefaultVertDirection	'0 10 0'
Template Automation_Job Nex_Automation_Option_Slider
{
	action Nex_Automation_Option_Slider
}
Template Automation_Job Nex_Automation_Option_EditBox
{
	action Nex_Automation_Option_EditBox
}
Template Automation_Job Nex_Automation_Option_Switch
{
	action Nex_Automation_Option_Switch
}
DeriveTemplate Composition Nex_Composition
{
	direction	[Nex_DefaultHorzDirection]
}
DeriveTemplate Picture Nex_Line
{
	picture	"gfx/m_dot"
	size	"200 10"
}
Item Custom Nex_Void
{
	size	"200 12"
	flag	[FlagNoSelect]
}

DeriveTemplate TextButton Nex_KeyButton
{
	type	"Item_Nex_KeyButton"
}
DeriveTemplate MultiLabel Nex_Credits
{
	type	"Item_Nex_Credits"
}
DeriveTemplate Label Nex_HostCache_StringField
{
	type	"Item_Nex_HostCache_StringField"
}
DeriveTemplate Label Nex_HostCache_ValueField
{
	type	"Item_Nex_HostCache_ValueField"
}
DeriveTemplate Label Nex_HostCache_Players
{
	type	"Item_Nex_HostCache_Players"
}
DeriveTemplate PictureButton Nex_HostCache_Entry
{
	normal		"$gfx/white"
	drawFlags	[DrawFlagModulate]
	type		"Item_Nex_HostCache_Entry"
}
DeriveTemplate Nex_Composition Nex_Option_Slider
{
	DeriveTemplate Nex_Automation_Option_Slider Automation
	{}
	DeriveTemplate TextButton 	Description
	{}
	DeriveTemplate Slider 		Slider
	{
		action	Nex_Action_TestOnChange
	}
	DeriveTemplate ValueButton 	Value
	{}
}
DeriveTemplate Nex_Composition Nex_Option_Switch
{
	DeriveTemplate Nex_Automation_Option_Switch Automation
	{}
	DeriveTemplate TextButton 	Description
	{}
	DeriveTemplate SwitchButton	Switch
	{
		action	Nex_Action_TestOnChange
	}
}
