#if 0
"Perl code to convert this to a skinvalues.txt file.";
while(<DATA>)
{
	chomp;
	if(/^\s*(?:SKINFLOAT|SKINVECTOR)\(([A-Z_]+), ([-'0-9. ]+)\);$/)
	{
		printf "%-31s %s\n", $1, $2;
	}
	elsif(/^\s*SKINSTRING\(([A-Z_]+), "(.*)"\);$/)
	{
		printf "//   uses \"$2\" images\n";
	}
	elsif(/^$/)
	{
		print "\n";
	}
	elsif(/^\s+\/\/ (.*)$/)
	{
		print "// $1\n";
	}
	elsif(/^SKINBEGIN$|^SKINEND$|^#endif$/)
	{
	}
	else
	{
		print "!!! $_\n";
	}
}
__DATA__
#endif
SKINBEGIN
	// font sizes (used for everything)
	SKINFLOAT(FONTSIZE_NORMAL, 12);
	SKINFLOAT(HEIGHT_NORMAL, 1.5);
	SKINFLOAT(FONTSIZE_TITLE, 16);
	SKINFLOAT(HEIGHT_TITLE, 1.5);
	SKINFLOAT(HEIGHT_ZOOMEDTITLE, -1);

	// the individual dialog background colors
	SKINVECTOR(COLOR_DIALOG_MULTIPLAYER, '0.7 0.7 1');
	SKINVECTOR(COLOR_DIALOG_SETTINGS, '0.7 0.7 1');
	SKINVECTOR(COLOR_DIALOG_TEAMSELECT, '1 1 1');
	SKINVECTOR(COLOR_DIALOG_QUIT, '1 0 0');
	SKINVECTOR(COLOR_DIALOG_MUTATORS, '0.7 0.7 1');
	SKINVECTOR(COLOR_DIALOG_MAPINFO, '0.7 0.7 1');
	SKINVECTOR(COLOR_DIALOG_USERBIND, '0.7 0.7 1');
	SKINVECTOR(COLOR_DIALOG_SINGLEPLAYER, '1 1 0.7');
	SKINVECTOR(COLOR_DIALOG_CREDITS, '0.7 0.7 1');
	SKINVECTOR(COLOR_DIALOG_WEAPONS, '1 0.7 0.7');

	// nexposee positions of windows (they are the scale transformation
	// centers, NOT the actual positions of the windows!)
	SKINVECTOR(POSITION_DIALOG_MULTIPLAYER, '0.9 0.5 0');
	SKINVECTOR(POSITION_DIALOG_SINGLEPLAYER, '0.1 0.1 0');
	SKINVECTOR(POSITION_DIALOG_SETTINGS, '0.1 0.9 0');
	SKINVECTOR(POSITION_DIALOG_CREDITS, '0.3 1.2 0');
	SKINVECTOR(POSITION_DIALOG_QUIT, '0.9 1.2 0');

	// mouse
	SKINSTRING(GFX_CURSOR, "cursor");
	SKINVECTOR(SIZE_CURSOR, '32 32 0');
	SKINVECTOR(OFFSET_CURSOR, '0 0 0');
	SKINFLOAT(ALPHA_CURSOR_INTRO, 0);

	// general
	SKINSTRING(GFX_BACKGROUND, "background");
	SKINSTRING(GFX_BACKGROUND_INGAME, "background_ingame");
	SKINFLOAT(ALPHA_BACKGROUND_INGAME, 0.7);
	SKINFLOAT(ALPHA_DISABLED, 0.2);
	SKINFLOAT(ALPHA_BEHIND, 0.5);
	SKINFLOAT(ALPHA_TEXT, 0.7);

	// item: button
	SKINSTRING(GFX_BUTTON, "button");
	SKINSTRING(GFX_BUTTON_GRAY, "buttongray");
	SKINSTRING(GFX_BUTTON_BIG, "bigbutton");
	SKINSTRING(GFX_BUTTON_BIG_GRAY, "bigbuttongray");
	SKINVECTOR(COLOR_BUTTON_N, '1 1 1');
	SKINVECTOR(COLOR_BUTTON_C, '1 1 1');
	SKINVECTOR(COLOR_BUTTON_F, '1 1 1');
	SKINVECTOR(COLOR_BUTTON_D, '1 1 1');

	// item: campaign
	SKINFLOAT(ALPHA_CAMPAIGN_SELECTABLE, 0.8);
	SKINVECTOR(COLOR_CAMPAIGN_SELECTABLE, '1 1 1');
	SKINFLOAT(ALPHA_CAMPAIGN_CURRENT, 1);
	SKINVECTOR(COLOR_CAMPAIGN_CURRENT, '1 1 0');
	SKINFLOAT(ALPHA_CAMPAIGN_FUTURE, 0.2);
	SKINVECTOR(COLOR_CAMPAIGN_FUTURE, '1 1 1');
	SKINFLOAT(ALPHA_CAMPAIGN_DESCRIPTION, 0.7);

	// item: checkbox
	SKINSTRING(GFX_CHECKBOX, "checkbox");
	SKINVECTOR(COLOR_CHECKBOX_N, '1 1 1');
	SKINVECTOR(COLOR_CHECKBOX_C, '1 1 1');
	SKINVECTOR(COLOR_CHECKBOX_F, '1 1 1');
	SKINVECTOR(COLOR_CHECKBOX_D, '1 1 1');

	// item: credits list
	SKINVECTOR(COLOR_CREDITS_TITLE, '1 1 1');
	SKINFLOAT(ALPHA_CREDITS_TITLE, 1);
	SKINVECTOR(COLOR_CREDITS_FUNCTION, '1 1 1');
	SKINFLOAT(ALPHA_CREDITS_FUNCTION, 0.7);
	SKINVECTOR(COLOR_CREDITS_PERSON, '0.7 0.7 1');
	SKINFLOAT(ALPHA_CREDITS_PERSON, 0.7);
	SKINFLOAT(ROWS_CREDITS, 20);
	SKINFLOAT(WIDTH_CREDITS, 0.5);

	// item: crosshair button
	SKINSTRING(GFX_CROSSHAIRBUTTON, "crosshairbutton");

	// item: dialog
	SKINSTRING(GFX_DIALOGBORDER, "border");
	SKINSTRING(GFX_CLOSEBUTTON, "closebutton");
	SKINFLOAT(MARGIN_TOP, 8);
	SKINFLOAT(MARGIN_BOTTOM, 8);
	SKINFLOAT(MARGIN_LEFT, 8);
	SKINFLOAT(MARGIN_RIGHT, 8);
	SKINFLOAT(MARGIN_COLUMNS, 4);
	SKINFLOAT(MARGIN_ROWS, 4);
	SKINFLOAT(HEIGHT_DIALOGBORDER, 1);

	// item: input box
	SKINSTRING(GFX_INPUTBOX, "inputbox");
	SKINVECTOR(COLOR_INPUTBOX_N, '1 1 1');
	SKINVECTOR(COLOR_INPUTBOX_F, '1 1 1');
	SKINFLOAT(MARGIN_INPUTBOX_CHARS, 1);

	// item: key grabber
	SKINVECTOR(COLOR_KEYGRABBER_TITLES, '1 1 1');
	SKINFLOAT(ALPHA_KEYGRABBER_TITLES, 1);
	SKINVECTOR(COLOR_KEYGRABBER_KEYS, '1 1 1');
	SKINFLOAT(ALPHA_KEYGRABBER_KEYS, 0.7);

	// item: list box
	SKINVECTOR(COLOR_LISTBOX_SELECTED, '0 0 1');
	SKINFLOAT(ALPHA_LISTBOX_SELECTED, 0.5);
	SKINVECTOR(COLOR_LISTBOX_WAITING, '1 0 0');
	SKINFLOAT(ALPHA_LISTBOX_WAITING, 0.5);

	// item: map list
	SKINVECTOR(COLOR_MAPLIST_TITLE, '1 1 1');
	SKINVECTOR(COLOR_MAPLIST_AUTHOR, '0.4 0.4 0.7');
	SKINVECTOR(COLOR_MAPLIST_INCLUDEDBG, '0 0 0');
	SKINFLOAT(ALPHA_MAPLIST_INCLUDEDFG, 1);
	SKINFLOAT(ALPHA_MAPLIST_INCLUDEDBG, 0.5);
	SKINFLOAT(ALPHA_MAPLIST_NOTINCLUDEDFG, 0.4);

	// item: nexposee
	SKINVECTOR(ALPHAS_MAINMENU, '0.6 0.8 0.9');

	// item: player color button
	SKINSTRING(GFX_COLORBUTTON, "colorbutton");
	SKINSTRING(GFX_COLORBUTTON_COLOR, "color");

	// item: player model
	SKINVECTOR(COLOR_MODELTITLE, '1 1 1');
	SKINFLOAT(ALPHA_MODELTITLE, 1);

	// item: player name editor
	SKINSTRING(GFX_CHARMAP, "charmap");
	SKINSTRING(GFX_CHARMAP_SELECTED, "charmapbutton");

	// item: radio button
	SKINSTRING(GFX_RADIOBUTTON, "radiobutton");
	SKINVECTOR(COLOR_RADIOBUTTON_N, '1 1 1');
	SKINVECTOR(COLOR_RADIOBUTTON_C, '1 1 1');
	SKINVECTOR(COLOR_RADIOBUTTON_F, '1 1 1');
	SKINVECTOR(COLOR_RADIOBUTTON_D, '1 1 1');

	// item: scrollbar
	SKINSTRING(GFX_SCROLLBAR, "scrollbar");
	SKINVECTOR(COLOR_SCROLLBAR_N, '1 1 1');
	SKINVECTOR(COLOR_SCROLLBAR_F, '1 1 1');
	SKINVECTOR(COLOR_SCROLLBAR_C, '1 1 1');
	SKINVECTOR(COLOR_SCROLLBAR_S, '1 1 1');
	SKINFLOAT(WIDTH_SCROLLBAR, 16);

	// item: server list
	SKINFLOAT(ALPHA_SERVERLIST_FULL, 0.4);
	SKINFLOAT(ALPHA_SERVERLIST_EMPTY, 0.7);
	SKINVECTOR(COLOR_SERVERLIST_LOWPING, '0 1 0');
	SKINVECTOR(COLOR_SERVERLIST_MEDPING, '1 1 0');
	SKINVECTOR(COLOR_SERVERLIST_HIGHPING, '1 0 0');
	SKINFLOAT(ALPHA_SERVERLIST_HIGHPING, 0.4);
	SKINFLOAT(ALPHA_SERVERLIST_FAVORITE, 0.8);
	SKINVECTOR(COLOR_SERVERLIST_FAVORITE, '1 1 1');

	// item: slider
	SKINSTRING(GFX_SLIDER, "slider");
	SKINVECTOR(COLOR_SLIDER_N, '1 1 1');
	SKINVECTOR(COLOR_SLIDER_C, '1 1 1');
	SKINVECTOR(COLOR_SLIDER_F, '1 1 1');
	SKINVECTOR(COLOR_SLIDER_D, '1 1 1');
	SKINVECTOR(COLOR_SLIDER_S, '1 1 1');
	SKINFLOAT(WIDTH_SLIDERTEXT, 0.333333333333);
	SKINVECTOR(TOLERANCE_SLIDER, '0.2 2 0');
SKINEND
