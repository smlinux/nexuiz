string CVAR_CHECK_DEFAULT = "913e35a06d0542e7ba625bfe0e0844c9";
string CVAR_CHECK_WEAPONS = "2a35f7139825257d468d22354209cf54";
float	FALSE					= 0;
float	TRUE					= 1;

float	FL_FLY					= 1;
float	FL_SWIM					= 2;
float	FL_CLIENT				= 8;
float	FL_INWATER				= 16;
float	FL_MONSTER				= 32;
float	FL_GODMODE				= 64;
float	FL_NOTARGET				= 128;
float	FL_ITEM					= 256;
float	FL_ONGROUND				= 512;
float	FL_PARTIALGROUND			= 1024;
float	FL_WATERJUMP				= 2048;
float	FL_JUMPRELEASED				= 4096;
float	FL_WEAPON				= 8192;
float	FL_POWERUP				= 16384;
float	FL_PROJECTILE				= 32768;
float	FL_TOSSED				= 65536;
float   FL_NO_WEAPON_STAY       = 131072;

float	MOVETYPE_NONE				= 0;
float	MOVETYPE_ANGLENOCLIP			= 1;
float	MOVETYPE_ANGLECLIP			= 2;
float	MOVETYPE_WALK				= 3;
float	MOVETYPE_STEP				= 4;
float	MOVETYPE_FLY				= 5;
float	MOVETYPE_TOSS				= 6;
float	MOVETYPE_PUSH				= 7;
float	MOVETYPE_NOCLIP				= 8;
float	MOVETYPE_FLYMISSILE			= 9;
float	MOVETYPE_BOUNCE				= 10;
float	MOVETYPE_BOUNCEMISSILE	= 11;	// Like bounce but doesn't lose speed on bouncing
//float	MOVETYPE_FOLLOW				= 12;	// 'Attaches' the entity to its aim_ent

float	SOLID_NOT				= 0;
float	SOLID_TRIGGER				= 1;
float	SOLID_BBOX				= 2;
float	SOLID_SLIDEBOX				= 3;
float	SOLID_BSP				= 4;
//float	SOLID_CORPSE				= 5;	// Unobstructed by CORPSE or SLIDEBOX

float	DEAD_NO					= 0;
float	DEAD_DYING				= 1;
float	DEAD_DEAD				= 2;
float	DEAD_RESPAWNABLE			= 3;
float	DEAD_RESPAWNING			= 4;

float	DAMAGE_NO				= 0;
float	DAMAGE_YES				= 1;
float	DAMAGE_AIM				= 2;

float	CONTENT_EMPTY				= -1;
float	CONTENT_SOLID				= -2;
float	CONTENT_WATER				= -3;
float	CONTENT_SLIME				= -4;
float	CONTENT_LAVA				= -5;
float	CONTENT_SKY				= -6;

float	SVC_BAD					= 0;
float	SVC_NOP					= 1;
float	SVC_DISCONNECT				= 2;
float	SVC_UPDATESTAT				= 3;
float	SVC_VERSION				= 4;
float	SVC_SETVIEW				= 5;
float	SVC_SOUND				= 6;
float	SVC_TIME				= 7;
float	SVC_PRINT				= 8;
float	SVC_STUFFTEXT				= 9;
float	SVC_SETANGLE				= 10;
float	SVC_SERVERINFO				= 11;
float	SVC_LIGHTSTYLE				= 12;
float	SVC_UPDATENAME				= 13;
float	SVC_UPDATEFRAGS				= 14;
float	SVC_CLIENTDATA				= 15;
float	SVC_STOPSOUND				= 16;
float	SVC_UPDATECOLORS			= 17;
float	SVC_PARTICLE				= 18;
float	SVC_DAMAGE				= 19;
float	SVC_SPAWNSTATIC				= 20;
float	SVC_SPAWNBINARY				= 21;
float	SVC_SPAWNBASELINE			= 22;
float	SVC_TEMPENTITY				= 23;
float	SVC_SETPAUSE				= 24;
float	SVC_SIGNONNUM				= 25;
float	SVC_CENTERPRINT				= 26;
float	SVC_KILLEDMONSTER			= 27;
float	SVC_FOUNDSECRET				= 28;
float	SVC_SPAWNSTATICSOUND			= 29;
float	SVC_INTERMISSION			= 30;
float	SVC_FINALE				= 31;
float	SVC_CDTRACK				= 32;
float	SVC_SELLSCREEN				= 33;
float	SVC_CUTSCENE				= 34;

float	TE_SPIKE				= 0;
float	TE_SUPERSPIKE				= 1;
float	TE_GUNSHOT				= 2;
float	TE_EXPLOSION				= 3;
float	TE_TAREXPLOSION				= 4;
float	TE_LIGHTNING1				= 5;
float	TE_LIGHTNING2				= 6;
float	TE_WIZSPIKE				= 7;
float	TE_KNIGHTSPIKE				= 8;
float	TE_LIGHTNING3				= 9;
float	TE_LAVASPLASH				= 10;
float	TE_TELEPORT				= 11;

// this assignment must match menu/nexuiz/dialog_settings_misc.c!
float	CHAN_AUTO				= 0;
	// on world: announcers, ...                     INFO
	// on players: item pickup                       ITEMS
	// on entities: UNUSED
float	CHAN_WEAPON				= 1; // Weapon fire
	// on world: UNUSED
	// on players: weapon firing                     WEAPONS
	// on entities: turret firing                    WEAPONS
float	CHAN_VOICE				= 2; // Voice/Radio
	// on world: UNUSED
	// on players: voice                             VOICE
	// on entities: ambient                          AMBIENT
float	CHAN_TRIGGER			= 3; // Triggers/Items
	// on world: UNUSED
	// on players: item pickup                       ITEMS
	// on entities: platforms moving etc.            ITEMS
float	CHAN_PROJECTILE			= 4; // Projectiles
	// on world: UNUSED
	// on players: projectiles hitting player        SHOTS
	// on entities: projectiles                      SHOTS
float	CHAN_WEAPON2			= 5; // Nex fire (separated as it is a very long sound)
	// on world: UNUSED
	// on players: weapon firing                     WEAPONS
	// on entities: turret firing                    WEAPONS
float	CHAN_PAIN				= 6; // Pain
	// on world: UNUSED
	// on players: pain                              PAIN
	// on entities: projectiles flying               SHOTS
float	CHAN_PLAYER				= 7; // Player body
	// on world: UNUSED
	// on players: player sounds                     PLAYER
	// on entities: player sounds                    PLAYER

float	ATTN_NONE				= 0;
float	ATTN_MIN				= 0.015625;
float	ATTN_NORM				= 0.5;
float	ATTN_IDLE				= 2;
float	ATTN_STATIC				= 3;
float	ATTN_MAX   				= 3.984375;

float	UPDATE_GENERAL				= 0;
float	UPDATE_STATIC				= 1;
float	UPDATE_BINARY				= 2;
float	UPDATE_TEMP				= 3;

float	EF_BRIGHTFIELD				= 1;
float	EF_MUZZLEFLASH				= 2;
float	EF_BRIGHTLIGHT				= 4;
float	EF_DIMLIGHT				= 8;

#define EFMASK_CHEAP (EF_ADDITIVE | EF_DOUBLESIDED | EF_FULLBRIGHT | EF_NODEPTHTEST | EF_NODRAW | EF_NOGUNBOB | EF_NOSHADOW | EF_LOWPRECISION | EF_SELECTABLE)

float	MSG_BROADCAST				= 0; // unreliable
float	MSG_ONE					= 1; // reliable
float	MSG_ALL					= 2; // reliable
float	MSG_INIT				= 3; // initialization
float	MSG_ENTITY				= 5; // csqc

// Deathtypes (weapon deathtypes are the IT_* constants below)
// NOTE: when adding death types, please add an explanation to Docs/spamlog.txt too.
float	DEATH_SPECIAL_START     = 10000;
float	DEATH_FALL				= 10000;
float	DEATH_TELEFRAG				= 10001;
float	DEATH_DROWN				= 10002;
float	DEATH_HURTTRIGGER			= 10003;
float	DEATH_LAVA				= 10004;
float	DEATH_SLIME				= 10005;
float	DEATH_KILL				= 10006;
float	DEATH_NOAMMO				= 10007;
float	DEATH_SWAMP				= 10008;
float	DEATH_TEAMCHANGE			= 10009;
float	DEATH_AUTOTEAMCHANGE			= 10010;
float	DEATH_CAMP				= 10011;
float	DEATH_SHOOTING_STAR			= 10012;
float	DEATH_ROT				= 10013;
float	DEATH_MIRRORDAMAGE		= 10014;
float	DEATH_TOUCHEXPLODE      = 10015;
float   DEATH_TURRET            = 10100;

float	DEATH_WEAPONMASK        = 0xFF;
float	DEATH_HITTYPEMASK		= 0x1F00; // which is WAY below 10000 used for normal deaths
float	HITTYPE_SECONDARY = 0x100;
float	HITTYPE_SPLASH = 0x200;
float	HITTYPE_BOUNCE = 0x400;
float	HITTYPE_HEADSHOT = 0x800;
float	HITTYPE_RESERVED = 0x1000; // unused yet

// macros to access these
#define DEATH_ISSPECIAL(t)            ((t) >= DEATH_SPECIAL_START)
#define DEATH_WEAPONOFWEAPONDEATH(t)  ((t) & DEATH_WEAPONMASK)
#define DEATH_ISWEAPON(t,w)           (!DEATH_ISSPECIAL(t) && DEATH_WEAPONOFWEAPONDEATH(t) == (w))
#define DEATH_WEAPONOF(t)             (DEATH_ISSPECIAL(t) ? 0 : DEATH_WEAPONOFWEAPONDEATH(t))
#define WEP_VALID(w)                  ((w) >= WEP_FIRST && (w) <= WEP_LAST)

vector	PL_VIEW_OFS				= '0 0 35';
vector	PL_MIN					= '-16 -16 -24';
vector	PL_MAX					= '16 16 45';
vector	PL_CROUCH_VIEW_OFS			= '0 0 15';
vector	PL_CROUCH_MIN				= '-16 -16 -24';
vector	PL_CROUCH_MAX				= '16 16 25';

// Sajt - added these, just as constants. Not sure how you want them actually put in the game, but I just
// did this so at least they worked
// NOTE: instagib IS NOT compatible with rocket-arena, so make sure to prevent selecting both in a menu
//float	GAME_INSTAGIB				= 1;   /// everyone gets the nex gun with infinite ammo, and one shot kills
//float	GAME_ROCKET_ARENA			= 16;  /// Everyone starts with a rocket launcher
//float	GAME_FULLBRIGHT_PLAYERS			= 64; /// makes the players model fullbright
//float	GAME_TEAMS				= 128; /// Teams, red/green/yellow/blue

float	game;	// set to "gamecfg" on spawnfunc_worldspawn


//float	POWERUP_STRENGTH_DAMAGE			= 2; // damage multiplier for strength powerup
//float	POWERUP_STRENGTH_FORCE			= 4; // force multiplier for strength powerup

//float	POWERUP_INVINCIBLE_TAKEDAMAGE		= 0.2; // received damage multiplier for invincible powerup


float TE_BEAM					= 13;		// grappling hook

// CTF
float FLAG_BASE = 1;
float FLAG_CARRY = 2;
float FLAG_DROPPED = 3;

float MAX_SHOT_DISTANCE = 32768;

float COLOR_TEAM1	= 5;  // red
float COLOR_TEAM2	= 14; // blue
float COLOR_TEAM3	= 13; // yellow
float COLOR_TEAM4	= 10; // pink

float NUM_PLAYERSKINS_TEAMPLAY = 3;

float ASSAULT_VALUE_INACTIVE = 1000;
