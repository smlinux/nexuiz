.vector HookStart;
.vector HookEnd;
.float HookKillTime;

void Draw_CylindricLine(vector from, vector to, float thickness, string texture, float aspect, float shift, vector rgb, float alpha, float drawflag)
{
	// I want to draw a quad...
	// from and to are MIDPOINTS.
	
	vector axis, thickdir, A, B, C, D;
	float length_tex;

	axis = normalize(to - from);
	length_tex = aspect * vlen(to - from) / thickness;

	// direction is perpendicular to the view normal, and perpendicular to the axis
	thickdir = normalize(cross(axis, view_origin - from));

	A = from - thickdir * (thickness / 2);
	B = from + thickdir * (thickness / 2);
	C = to + thickdir * (thickness / 2);
	D = to - thickdir * (thickness / 2);

	R_BeginPolygon(texture, drawflag);
	R_PolygonVertex(A, '0 0 0' + shift * '1 0 0', rgb, alpha);
	R_PolygonVertex(B, '0 1 0' + shift * '1 0 0', rgb, alpha);
	R_PolygonVertex(C, '0 1 0' + (shift + length_tex) * '1 0 0', rgb, alpha);
	R_PolygonVertex(D, '0 0 0' + (shift + length_tex) * '1 0 0', rgb, alpha);
	R_EndPolygon();
}

void Draw_GrapplingHook()
{
	vector a, b;
	string tex;
	vector rgb;

	if(time >= self.HookKillTime)
		return;
	if(self.sv_entnum == player_localentnum - 1)
		a = view_origin + view_forward * hook_shotorigin_x + view_right * hook_shotorigin_y + view_up * hook_shotorigin_z;
	else
		a = self.HookStart;
	b = self.HookEnd;
	if(self.team == COLOR_TEAM1)
	{
		tex = "particles/hook_red";
		rgb = '1 .3 .3';
	}
	else if(self.team == COLOR_TEAM2)
	{
		tex = "particles/hook_blue";
		rgb = '.3 .3 1';
	}
	else if(self.team == COLOR_TEAM3)
	{
		tex = "particles/hook_yellow";
		rgb = '1 1 .3';
	}
	else if(self.team == COLOR_TEAM4)
	{
		tex = "particles/hook_pink";
		rgb = '1 .3 1';
	}
	else
	{
		tex = "particles/hook_green";
		rgb = '.3 1 .3';
	}
	if(csqc_flags & CSQC_FLAG_READPICTURE)
		Draw_CylindricLine(b, a, 8, tex, 0.25, random(), '1 1 1', 1, DRAWFLAG_NORMAL);
	else
		Draw_CylindricLine(b, a, 1, "", 0.25, 0, rgb, 1, DRAWFLAG_NORMAL);
}

void Net_GrapplingHook()
{
	self.sv_entnum = ReadShort();
	self.HookEnd_x = ReadCoord();
	self.HookEnd_y = ReadCoord();
	self.HookEnd_z = ReadCoord();
	self.HookStart_x = ReadCoord();
	self.HookStart_y = ReadCoord();
	self.HookStart_z = ReadCoord();

	self.HookKillTime = time + 0.1;
	self.draw = Draw_GrapplingHook;

	self.team = GetPlayerColorForce(self.sv_entnum);
}
