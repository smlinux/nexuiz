const string string_null;

// --------------------------------------------------------------------------
// MENU Functionality

#define DATABUF_PING 0
#define DATABUF_CAPTURES (1*maxclients)
#define DATABUF_DEATHS (2*maxclients)
#define DATABUF_RETURNS (3*maxclients)

#define DATABUF_NEXT (5*maxclients)

void() menu_show_error;
void() menu_sub_null;

float menu_visible;
var void() menu_show;
var float(float bInputType, float nPrimary, float nSecondary) menu_action;

// --------------------------------------------------------------------------
// CTF

void() ctf_menu_show;
string ctf_temp_1;

// --------------------------------------------------------------------------
// Onslaught

// Map coordinate base calculations need these
vector mi_center;
vector mi_scale;
// Minimap
string minimapname;
float ons_showmap;

// --------------------------------------------------------------------------
// General stuff

float csqc_revision;

float drawfont;
float postinit;
float gametype;
entity gps_start;

float draw_enginesbar;
//float sorted_players;
//float sorted_teams;

// Defs
//.float ctf_state;
//.float health;

// Constants
const float COLOR_TEAM_RED = 64;
const float COLOR_TEAM_BLUE = 208;

const float COLOR_TEAM1       = 4;  // red
const float COLOR_TEAM2       = 13; // blue
const float COLOR_TEAM3       = 12; // yellow
const float COLOR_TEAM4       = 9; // pink
const float COLOR_SPECTATOR = 1337;

#define FONT_DEFAULT 0
#define FONT_USER 8

// --------------------------------------------------------------------------
// Scoreboard stuff

#define MAX_SBAR_FIELDS 16

#define SP_END -1

#define SP_PING -2
#define SP_NAME -3
#define SP_KDRATIO -4
#define SP_CLRATIO -5
#define SP_PL -6

#define SP_SEPARATOR -100

float sbar_field[MAX_SBAR_FIELDS + 1];
float sbar_size[MAX_SBAR_FIELDS + 1];
string sbar_title[MAX_SBAR_FIELDS + 1];
float sbar_num_fields;

float sbar_font;
float sbar_bigfont;

string scores_label[MAX_SCORE];
float scores_flags[MAX_SCORE];
string teamscores_label[MAX_SCORE];
float teamscores_flags[MAX_SCORE];
.float scores[MAX_SCORE];
.float teamscores[MAX_TEAMSCORE];

#define IS_INCREASING(x) ( (x)&SFL_LOWER_IS_BETTER )
#define IS_DECREASING(x) ( !((x)&SFL_LOWER_IS_BETTER) )


vector sbar_fontsize;

float csqc_flags;
#define CSQC_FLAG_READPICTURE 1

string config_get(string key, string defaultvalue);

entity playerslots[255]; // 255 is engine limit on maxclients
entity teamslots[17];    // 17 teams (including "spectator team")
.float gotscores;
.entity owner;

.void(void) draw;
float drawframetime;
vector view_origin, view_angles, view_forward, view_right, view_up;
