// Property of Alientrap/AK
// options/player.menu
Item Window Player
{
	Item Window Avatar
	{
		size	'300 600'
		pos	'156 45'
		flag	[FlagEmbedded]

		Derive Picture Table7
		{
			picture "gfx/options_playerpic_border"
			size	'320 420'
			pos	'-10 5'
		}
		Derive Picture Picture
		{
			size	'263 360'
			picture "gfx/m_white"
			pos	'19 36'
		}
		Derive MultiLabel Description
		{
			size	'300 200'
			pos	'10 415'
			wrap	27
			fontSize '11 11 0'
		}
		Derive Picture PrevPicture
		{
			size	'30 18'
			picture "gfx/options_playerpic_nav"
			pos	'0 0'
		}
		Derive TextButton Prev
		{
			pos 	'3 3'
			normal	"<<"

			action	Nex_Action_Avatar_Prev
		}
		Derive Picture NamePicture
		{
			size	'240 18'
			picture "gfx/options_playerpic_nav_background"
			pos	'30 0'
		}
		Derive Label Name
		{
			pos		'30 4'
			color		"1 1 1"
			size		'270 12'
			alignment	[AlignCenter]
		}
		Derive Picture NextPicture
		{
			size	'30 18'
			picture "gfx/options_playerpic_nav"
			pos	'270 0'
		}
		Derive TextButton Next
		{
			pos	'275 3'
			normal	">>"

			action	Nex_Action_Avatar_Next
		}
		Item Task_Job Job
		{
			init  	Nex_Automation_UpdateAvatar
		}
	}
	Item Layout Settings
	{
		pos		'460 50'
		size		'445 600'
		origin		'185 0'
		flag		[FlagEmbedded]
		alignment	[AlignFirst]
		direction	[Nex_DefaultVertDirection]

		Derive Nex_Composition Name
		{
			Derive TextButton Description
			{
				normal	"Player name"
				link	"EditBox"
			}
			Derive EditBox EditBox
			{
				size 	'182 20'
				target	"Data::Player::Name::Text"
			}
		}
		Derive Nex_Composition TeamColor
		{
			text	"Pants color"
			target	"::Data::Player::Color::TeamColor::TextSwitch"

			Derive Nex_Automation_Option_Slider Automation
			{}
			Derive TextButton Description
			{}
			Derive Slider Slider
			{
				action  Nex_Action_TestOnChange
			}
			Derive PictureValueButton Value
			{
				fontSize	[DefaultFontSize]

				color		"1.0 1.0 1.0"
				colorPressed	"1.0 1.0 1.0"
				colorSelected	"1.0 1.0 1.0"
			}
		}
		Derive Nex_Composition ShirtColor
		{
			text	"Shirt color"
			target	"::Data::Player::Color::ShirtColor::TextSwitch"

			Derive Nex_Automation_Option_Slider Automation
			{}
			Derive TextButton Description
			{}
			Derive Slider Slider
			{
				action  Nex_Action_TestOnChange
			}
			Derive PictureValueButton Value
			{
				fontSize	[DefaultFontSize]

				color		"1.0 1.0 1.0"
				colorPressed	"1.0 1.0 1.0"
				colorSelected	"1.0 1.0 1.0"
			}
		}
		Derive Nex_Option_Slider FOV
		{
			text	"Field of View"
			target	"::Data::Player::FOV::Value"
		}
		Derive Nex_Option_Slider ViewSize
		{
			text	"View Size"
			target	"::Data::Player::ViewSize::Value"
		}
		Derive Nex_Option_Slider CrosshairType
		{
			text	"Crosshair Type"
			target	"::Data::Player::Crosshair::Type::Switch"
		}
		Derive Nex_Option_Slider CrosshairColorRed
		{
			text	"Crosshair Red"
			target	"::Data::Player::Crosshair::Color::Red::Value"
		}
		Derive Nex_Option_Slider CrosshairColorGreen
		{
			text	"Crosshair Green"
			target	"::Data::Player::Crosshair::Color::Green::Value"
		}
		Derive Nex_Option_Slider CrosshairColorBlue
		{
			text	"Crosshair Blue"
			target	"::Data::Player::Crosshair::Color::Blue::Value"
		}
		Derive Nex_Option_Slider CrosshairSize
		{
			text	"Crosshair Size"
			target	"::Data::Player::Crosshair::Size::Value"
		}
		Derive Nex_Option_Switch WeaponAutoswitch
		{
			text	"Weapon autoswitch"
			target	"::Data::Player::WeaponAutoswitch::Switch"
		}
		Derive Nex_Option_Switch NoGibs
		{
			text	"Disable gibs"
			target	"::Data::Player::NoGibs::Switch"
		}
		Derive Nex_Void Seperator1
		{}
		Derive PictureButton Apply
		{
			normal		"$gfx/options_b_apply"

			action	Nex_Action_Player_Apply
		}
		Derive TextButton Reset
		{
			alignment [AlignRight]
			normal	"Reset"
			init	Nex_Action_ResetData
			target	"::Data::Player"
		}
	}
}
